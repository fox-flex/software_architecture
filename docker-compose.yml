version: '3'
services:
  facade:
    build:
      context: ./facade
      dockerfile: Dockerfile
    container_name: facade
    ports:
      - "8000:8000"
    env_file:
      - ./facade/.env
    depends_on:
      - message-1
      - message-2
      - logging-1
      - logging-2
      - logging-3
    networks:
      - docker-net

  message-1:
    build:
      context: ./message
      dockerfile: Dockerfile
    container_name: message-1
    ports:
      - "8001:8000"
    env_file:
      - ./message/.env
    depends_on:
      - kafka-server
    networks:
      - docker-net
  
  message-2:
    build:
      context: ./message
      dockerfile: Dockerfile
    container_name: message-2
    ports:
      - "8002:8000"
    env_file:
      - ./message/.env
    depends_on:
      - kafka-server
    networks:
      - docker-net
  
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-server
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - 2181:2181
    networks:
      - docker-net
  
  kafka-server:
    image: bitnami/kafka:latest
    container_name: kafka-server
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - docker-net
  
  kafka-setup:
    image: bitnami/kafka:latest
    container_name: kafka-setup
    restart: "no"
    depends_on:
      - kafka-server
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka-server:9092 --list

      kafka-topics --bootstrap-server kafka-server:9092 --create --if-not-exists --topic message
      "
    networks:
      - docker-net

  logging-1:
    build:
      context: ./logging
      dockerfile: Dockerfile
    container_name: logging-1
    ports:
      - "8005:8000"
    env_file:
      - ./logging/.env
    depends_on:
      - hz-1
      - hz-2
      - hz-3
    networks:
      - docker-net

  logging-2:
    build:
      context: ./logging
      dockerfile: Dockerfile
    container_name: logging-2
    ports:
      - "8006:8000"
    env_file:
      - ./logging/.env
    depends_on:
      - hz-1
      - hz-2
      - hz-3
    networks:
      - docker-net

  logging-3:
    build:
      context: ./logging
      dockerfile: Dockerfile
    container_name: logging-3
    ports:
      - "8007:8000"
    env_file:
      - ./logging/.env
    depends_on:
      - hz-1
      - hz-2
      - hz-3
    networks:
      - docker-net

  hz-1:
    image: hazelcast/hazelcast:latest
    container_name: hz-1
    ports:
    - "5701:5701"
    networks:
    - docker-net
    environment:
    - HZ_CLUSTERNAME=hz-cluster

  hz-2:
    image: hazelcast/hazelcast:latest
    container_name: hz-2
    ports:
    - "5702:5701"
    networks:
    - docker-net
    environment:
    - HZ_CLUSTERNAME=hz-cluster

  hz-3:
    image: hazelcast/hazelcast:latest
    container_name: hz-3
    ports:
    - "5703:5701"
    networks:
    - docker-net
    environment:
    - HZ_CLUSTERNAME=hz-cluster
  
  # hz-mc:
  #   image: hazelcast/management-center
  #   container_name: hz-mc
  #   environment:
  #     - MC_CLUSTER_MEMBERS=hz-1,hz-2,hz-3
  #     - HZ_CLUSTERNAME=hz-cluster
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - docker-net

networks:
  docker-net:
    name: docker-net
